@model Scoring_MGDP.ViewModel.DefMetricasViewModel

<div class="modal-content">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 align="center">Nueva Definición de Métrica</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                @Html.LabelFor(model => model.id_DefMetricas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.id_DefMetricas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.id_DefMetricas, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.ProveedorViewModel, "Proveedor", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownListFor(m => m.IdProveedor, Model.ProveedoresList as SelectList, "Seleccionar", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.ProveedorViewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetricasViewModel, "Metrica", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownListFor(m => m.IdMetrica, Model.MetricasList as SelectList, "Seleccionar", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.MetricasViewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaDesde, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.FechaDesde, new { @class = "form-control datepicker", @PlaceHolder = "Seleccione fecha desde" })
                        <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaHasta, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.FechaHasta, new { @class = "form-control datepicker",  @PlaceHolder = "Seleccione fecha hasta" })
                        <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ratio, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Ratio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ratio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PesoPonderado, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.PesoPonderado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PesoPonderado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ObjCritico, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ObjCritico, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ObjCritico, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ObjMinimo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ObjMinimo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ObjMinimo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ObjExcelencia, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ObjExcelencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ObjExcelencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TiposProyectosViewModel, "Tipo Proyecto", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownListFor(m => m.IdTipoProyecto, Model.TiposProyectosList as SelectList, "Seleccionar", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.TiposProyectosViewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HubNoHub, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.HubNoHub, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HubNoHub, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VisionViewModel, "Vision", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownListFor(m => m.IdVision, Model.VisionList as SelectList, "Seleccionar", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.VisionViewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-10 col-md-5">
                    <input type="submit" value="Crear" class="btn btn-primary" id="approve-btn" />
                </div>
            </div>
        </div>
    }
</div>



<script type="text/javascript">

    $('.datepicker').datepicker({
        format: "dd/mm/yyyy",
        language: "es",
        orientation: "bottom auto",
        todayHighlight: true,
        autoclose: true,
    });

    //$(function () {
    //    $('#datetimepicker1').datetimepicker();
    //    $('#datetimepicker2').datetimepicker({
    //        useCurrent: false //Important! See issue #1075
    //    });
    //    $("#datetimepicker1").on("dp.change", function (e) {
    //        $('#datetimepicker2').data("DateTimePicker").minDate(e.date);
    //    });
    //    $("#datetimepicker2").on("dp.change", function (e) {
    //        $('#datetimepicker1').data("DateTimePicker").maxDate(e.date);
    //    });
    //});

    $(function () {
        $('#approve-btn').click(function () {
            $('#modal-container').modal('hide');
        });
    });

</script>